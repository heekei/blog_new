(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{237:function(s,a,e){"use strict";e.r(a);var t=e(2),n=Object(t.a)({},(function(){var s=this,a=s.$createElement,e=s._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h1",{attrs:{id:"pkg打包"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#pkg打包"}},[s._v("#")]),s._v(" pkg打包")]),s._v(" "),e("h2",{attrs:{id:"为什么要使用pkg"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#为什么要使用pkg"}},[s._v("#")]),s._v(" 为什么要使用pkg")]),s._v(" "),e("p",[s._v("今年有个项目，是用node开发一个自动化程序。为了便捷的服务器端运行，免除安装NODE环境等相关依赖，因此需要将node代码打包成可执行程序，直接在服务器端运行。")]),s._v(" "),e("h2",{attrs:{id:"特点"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#特点"}},[s._v("#")]),s._v(" 特点")]),s._v(" "),e("p",[s._v("将V8引擎和项目代码打包进一个可执行文件内;")]),s._v(" "),e("p",[s._v("即使在未安装Node.js的设备上("),e("strong",[s._v("支持 macos / linux / win")]),s._v(")也可以运行该可执行文件。")]),s._v(" "),e("h2",{attrs:{id:"使用方式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用方式"}},[s._v("#")]),s._v(" 使用方式")]),s._v(" "),e("p",[s._v("在此，我就说一下我在项目中的应用和使用方式。")]),s._v(" "),e("p",[s._v("还是老套路，用npm安装：")]),s._v(" "),e("blockquote",[e("p",[s._v("npm i pkg -D")])]),s._v(" "),e("p",[s._v("在package.json中，新增一个字段"),e("strong",[s._v("bin")]),s._v("，指定应用程序的入口：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('{\n    "name": "my_app",\n    ...\n    "bin": "src/index.js",\n    ...\n}\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])]),e("p",[s._v("然后执行命令行执行：")]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# --out-path 是指定打包输出的路径")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# --targets 是指定打包哪种平台下运行的程序，我这里打包的是linux-x64下的程序，支持的参数值可以在官方仓库中查阅")]),s._v("\npkg "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v(" --out-path"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("bin/ --targets"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("node10-linux-x64\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[s._v("打包完成后，会在bin目录下生成一个名为"),e("code",[s._v("my_app")]),s._v("的二进制可执行程序，然后为程序设置可执行权限"),e("code",[s._v("chmod +x my_app")]),s._v("，接下来便可在linux上直接运行 "),e("code",[s._v("./my_app")]),s._v(" 了.")]),s._v(" "),e("p",[s._v("注：如果你的程序是node10以下的项目，需要使用试验特性worker_threads，或者是其他v8配置，需要在运行打包的时候，设置node的runtime配置，例如：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("pkg . --out-path=bin/ --targets=node10-linux-x64 --options experimental-worker\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("这样打包出来的程序在执行的时候，就相当于运行：")]),s._v(" "),e("blockquote",[e("p",[s._v("node my_app --experimental-worker")])]),s._v(" "),e("p",[s._v("更多配置方式和FAQ，大家可以到"),e("a",{attrs:{href:"https://github.com/zeit/pkg",target:"_blank",rel:"noopener noreferrer"}},[s._v("zeit/pkg"),e("OutboundLink")],1),s._v(" 官方仓库中查看。")])])}),[],!1,null,null,null);a.default=n.exports}}]);